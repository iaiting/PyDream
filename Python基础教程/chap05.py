#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ==============================================================================
#
# Author        : iaiting
#
# Contact       : iaiting@aliyun.com
#
# Generate Data : 2018-04-04
#
# Copyright     : 本文件隶属iaiting，欢迎转载无须知会
#
# Desciption    : Python基础教程（第2版）第5章 书本例题
#
# ==============================================================================


# 逗号隔开输出多个值
# ==============================================================================
def chap0501_01():
    print(1, 2, 3)
    print((2, 3, 4))


# 序列解包
# ==============================================================================
def chap0501_02():
    x, y, *z = 12, 34, 56, 78, 90, 12
    print(x, y, z)

    *xx, yy, zz = 112, 234, 356, 478, 590, 612
    print(xx, yy, zz)

    *xxx, = (112, 234, 356, 478, 590, 612)
    print(xxx)


# if-elif-else
# ==============================================================================
def chap0504_01():
    num = 99
    if num > 0:
        print('The number is > 0')
    elif num < 0:
        print('The number is < 0')
    else:
        print('The number is = 0')

# ==============================================================================
def chap0504_02():
    x = y = [1, 2, 3]
    z = [1, 2, 3]

    if x is y:
        print("x is y")

    if x is not z:
        print("x is not z")

# 找出100以内的最大平方数
# break 跳出循环
# ==============================================================================
import math
def chap0505_01():
    for n in range(99, 0, -1):
        root = math.sqrt(n)
        if root == int(root):
            print(n)
            break

# for-else
# ==============================================================================
def chap0505_02():
    for n in range(122, 82, -1):
        print(n)
        root = math.sqrt(n)
        if root == int(root):
            print(n)
            break
    else:
        print("Did not find it.")

# 第5章 原生例题
# 通过关键字参数创建字典
# ==============================================================================
def Chap0501():
    print("*********t0501:")


# ==============================================================================
def Chap05_test():
    # chap0501_01()
    # chap0501_02()
    # chap0504_01()
    #chap0505_01()
    chap0505_02()



# ==============================================================================
if __name__ == '__main__':
    Chap05_test()
